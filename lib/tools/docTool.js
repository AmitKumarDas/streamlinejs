/*** Generated by streamline 0.1.36-stack - DO NOT EDIT ***/ var __global = typeof global !== 'undefined' ? global : window;var __srcName='streamline/lib/tools/docTool_.js'; function __func(_, __this, __arguments, fn, index, frame, body) { if (!_) { return __future.call(__this, fn, __arguments, index); } frame.file = __srcName; frame.prev = __global.__frame; __global.__frame = frame; try { body(); } catch (e) { e.__frame = e.__frame || frame.prev; __propagate(_, e); } finally { __global.__frame = __frame.prev; } } function __cb(_, frame, offset, col, fn){ frame.offset = offset; frame.col = col; var ctx = __global.__context; return function ___(err, result){ var oldFrame = __global.__frame; __global.__frame = frame; __global.__context = ctx; try { if (err) { err.__frame = err.__frame || frame; return _(err); } return fn(null, result); } catch (ex) { ex.__frame = ex.__frame || frame; return __propagate(_, ex); } finally { __global.__frame = oldFrame; } } } function __future(fn, args, i){ var done, err, result; var cb = function(e, r){ done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function ___(e, r){ cb(e, r); }; fn.apply(this, args); return function ___(_){ if (done) _.call(this, err, result); else cb = _.bind(this); } .bind(this); } function __nt(_, frame, fn){ var i = 0; var cb = __cb(_, frame, 0, 0, fn); if (typeof process != "undefined" && typeof process.nextTick == "function") return function ___(){ if (++i % 20 == 0) process.nextTick(cb); else cb(); }; else return function ___(){ if (++i % 20 == 0) setTimeout(cb, 0); else cb(); }; } function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } } function __trap(err){ if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } } (function main(_) { var fs, fsp; var __frame = { name: "main", line: 1 }; return __func(_, this, arguments, main, 0, __frame, function __$main() {
























 fs = require("fs");
 fsp = require("path");



 exports.generate = function exports_generate__1(_, path, options) {

 function _generate(_, path) { var stat, inside, doc, pair, isPackage, files, i; var __frame = { name: "_generate", line: 33 }; return __func(_, this, arguments, _generate, 0, __frame, function __$_generate() {
 return fs.stat(path, __cb(_, __frame, 1, 13, function ___(__0, __1) { stat = __1; return (function __$_generate(__then) {
 if (stat.isFile()) { return (function __$_generate(__then) {
 if ((path.indexOf(".js") == (path.length - 3))) {

 return fs.readFile(path, "utf8", __cb(_, __frame, 5, 14, function ___(__0, __2) {










 doc = __2.split("\n").map(function(line) { var i = line.indexOf(("//" + "/ ")); line = ((i >= 0) ? line.substring((i + 4)) : null); if ((line === "!doc")) { inside = true; } else if ((line === "!nodoc")) { inside = false; } else return ((inside && (line != null)) ? (line + "\n") : null)  ; }).filter(function(line) { return (line != null); }).join("");
 return _(null, (doc || "")); })); } else { __then(); } ; })(function __$_generate() {

 return _(null, ""); }); } else { return (function __$_generate(__then) {
 if (stat.isDirectory()) {
 pair = path.split("/node_modules/");
 isPackage = (pair[1] && (pair[1].indexOf("/") < 0));
 doc = "";
 return fs.readdir(path, __cb(_, __frame, 24, 15, function ___(__0, __3) { files = __3;
 i = 0; var __9 = false; return (function ___(__break) { var __loop = __nt(_, __frame, function __$_generate() { if (__9) { i++; } else { __9 = true; } ; var __8 = (i < files.length); if (__8) {
 return _generate(__cb(_, __frame, 26, 11, function ___(__0, __4) { doc += __4; __loop(); }), ((path + "/") + files[i])); } else { __break(); } ; }); __loop(); })(function __$_generate() { return (function __$_generate(__then) {

 if ((isPackage && doc)) {
 return fs.writeFile((path + "/API.md"), doc, "utf8", __cb(_, __frame, 29, 4, function __$_generate() {
 if (options.verbose) {
 console.log((("generated " + path) + "/API.md")); } ;
 doc = ""; __then(); })); } else { __then(); } ; })(function __$_generate() {

 return _(null, doc); }); }); })); } else {

 return _(null, ""); } ; })(__then); } ; })(_); })); }); }; var __frame = { name: "exports_generate__1", line: 31 }; return __func(_, this, arguments, exports_generate__1, 0, __frame, function __$exports_generate__1() { options = (options || { });

 return _generate(__cb(_, __frame, 40, 1, _), path); }); }; return (function __$main(__then) {


 if ((process.argv[1] && (process.argv[1].indexOf("/docTool") >= 0))) {
 return exports.generate(__cb(_, __frame, 74, 1, __then), fsp.join(process.cwd(), (process.argv[2] || ".")), { verbose: true }); } else { __then(); } ; })(_); });}).call(this, __trap);