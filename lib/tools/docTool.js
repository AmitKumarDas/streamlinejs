/*** Generated by streamline 0.1.36-stack - DO NOT EDIT ***/
var __global = typeof global !== 'undefined' ? global : window;var __srcName='./lib/tools/docTool_.js';function __Frame(line, name){ this.line = line; this.name = name; this.prev = __global.__frame; __global.__frame = this; };__Frame.prototype.file = __srcName;__Frame.prototype.err = function(_, e){e.__frame = e.__frame || this.prev;__propagate(_, e);};
function __cb(_, frame, offset, col, fn){ var ctx = __global.__context; frame.offset = offset; frame.col = col; return function ___(err, result){ var oldFrame = __global.__frame; __global.__frame = frame; __global.__context = ctx; try { if (err) { err.__frame = err.__frame || frame; return _(err); } return fn(null, result); } catch (ex) { ex.__frame = ex.__frame || frame; return __propagate(_, ex); } finally { __global.__frame = oldFrame; } } }
function __future(fn, args, i){ var done, err, result; var cb = function(e, r){ done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function ___(e, r){ cb(e, r); }; fn.apply(this, args); return function ___(_){ if (done) _.call(this, err, result); else cb = _.bind(this); } .bind(this); }
function __nt(_, frame, fn){ var i = 0; var cb = __cb(_, frame, 0, 0, fn); var safeCb = function ___(){ try { cb(); } catch (ex) { __propagate(cb, ex); } }; if (typeof process != "undefined" && typeof process.nextTick == "function") return function ___(){ if (++i % 20 == 0) process.nextTick(safeCb); else cb(); }; else return function ___(){ if (++i % 20 == 0) setTimeout(safeCb); else cb(); }; }
function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } }
function __trap(err){ if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } }
(function __$main(_) {
  var fs, fsp;
  fs = require("fs");
  fsp = require("path");
  exports.generate = function exports_generate__1(_, path, options) {
    if (!_) {
      return __future(exports_generate__1, arguments, 0);
    }
  ;
    var __frame = new __Frame(31, "exports_generate__1");
    function _generate(_, path) {
      if (!_) {
        return __future(_generate, arguments, 0);
      }
    ;
      var __frame = new __Frame(33, "_generate");
      try {
        var stat, inside, doc, pair, isPackage, files, i;
        return fs.stat(path, __cb(_, __frame, 1, 13, function ___(__0, __1) {
          stat = __1;
          return (function __$_generate(__then) {
            if (stat.isFile()) {
              return (function __$_generate(__then) {
                if ((path.indexOf(".js") == (path.length - 3))) {
                  return fs.readFile(path, "utf8", __cb(_, __frame, 5, 14, function ___(__0, __2) {
                    doc = __2.split("\n").map(function(line) {
                      var i = line.indexOf(("//" + "/ "));
                      line = ((i >= 0) ? line.substring((i + 4)) : null);
                      if ((line === "!doc")) {
                        inside = true;
                      }
                       else if ((line === "!nodoc")) {
                        inside = false;
                      }
                       else return ((inside && (line != null)) ? (line + "\n") : null)
                      
                    ;
                    }).filter(function(line) {
                      return (line != null);
                    }).join("");
                    return _(null, (doc || ""));
                  }));
                }
                 else {
                  __then();
                }
              ;
              })(function __$_generate() {
                return _(null, "");
              });
            }
             else {
              return (function __$_generate(__then) {
                if (stat.isDirectory()) {
                  pair = path.split("/node_modules/");
                  isPackage = (pair[1] && (pair[1].indexOf("/") < 0));
                  doc = "";
                  return fs.readdir(path, __cb(_, __frame, 24, 15, function ___(__0, __3) {
                    files = __3;
                    i = 0;
                    var __9 = false;
                    return (function ___(__break) {
                      var __loop = __nt(_, __frame, function __$_generate() {
                        if (__9) {
                          i++;
                        }
                         else {
                          __9 = true;
                        }
                      ;
                        var __8 = (i < files.length);
                        if (__8) {
                          return _generate(__cb(_, __frame, 26, 11, function ___(__0, __4) {
                            doc += __4;
                            __loop();
                          }), ((path + "/") + files[i]));
                        }
                         else {
                          __break();
                        }
                      ;
                      });
                      __loop();
                    })(function __$_generate() {
                      return (function __$_generate(__then) {
                        if ((isPackage && doc)) {
                          return fs.writeFile((path + "/API.md"), doc, "utf8", __cb(_, __frame, 29, 4, function __$_generate() {
                            if (options.verbose) {
                              console.log((("generated " + path) + "/API.md"));
                            }
                          ;
                            doc = "";
                            __then();
                          }));
                        }
                         else {
                          __then();
                        }
                      ;
                      })(function __$_generate() {
                        return _(null, doc);
                      });
                    });
                  }));
                }
                 else {
                  return _(null, "");
                }
              ;
              })(__then);
            }
          ;
          })(_);
        }));
      } catch (e) {
        __frame.err(_, e);
      } finally {
        __global.__frame = __frame.prev;
      };
    };
    try {
      options = (options || {
      });
      return _generate(__cb(_, __frame, 40, 1, _), path);
    } catch (e) {
      __frame.err(_, e);
    } finally {
      __global.__frame = __frame.prev;
    };
  };
  return (function __$__$main(__then) {
    if ((process.argv[1] && (process.argv[1].indexOf("/docTool") >= 0))) {
      return exports.generate(__cb(_, __frame, 73, 1, __then), fsp.join(process.cwd(), (process.argv[2] || ".")), {
        verbose: true
      });
    }
     else {
      __then();
    }
  ;
  })(_);
}).call(this, __trap);