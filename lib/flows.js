/*** Generated by streamline --lines-mark 0.1.3d - DO NOT EDIT ***/

var __global = typeof global !== 'undefined' ? global : window;
function __cb(_, self, fn){ var ctx = __global.__context; return function(err, result){ __global.__context = ctx; if (err) return _.call(self, err); try { return fn.call(self, null, result); } catch (ex) { return __propagate(_, self, ex); } } }
function __nt(_, self, fn){ var i = 0; var cb = __cb(_, self, fn); var safeCb = function(){ try { cb(); } catch (ex) { __propagate(cb, self, ex); } }; if (typeof process != "undefined" && typeof process.nextTick == "function") return function(){ if (++i % 20 == 0) process.nextTick(safeCb); else cb(); }; else return function(){ if (++i % 20 == 0) setTimeout(safeCb); else cb(); }; }
function __propagate(_, self, err){ try { _.call(self, err); } catch (ex) { __uncaught(ex); } }
function __throw(err){ if (err) throw err; }
function __forIn(object){ var array = []; for (var obj in object) { array.push(obj); } return array; }
function __wrapIn(cb){ return function(err, result){ try { cb(err, result); } catch (ex) { __uncaught(ex); } } }
function __uncaught(ex){ console.error("UNCAUGHT EXCEPTION: " + ex.message + "\n" + ex.stack); }
/*     1 */ (function(exports) {
/*    29 */   exports.setContext = function(ctx) {
/*    30 */     var old = __global.__context;
/*    31 */     __global.__context = ctx;
/*    32 */     return old;
              };
/*    34 */   exports.getContext = function() {
/*    35 */     return __global.__context;
              };
/*    41 */   exports.each = function(_, array, fn) {
                var __ = (_ = __wrapIn((_ || __throw)));
                try {
/*    42 */       if ((!array || !array.length)) {
                    return _(null, null)
                  };
/*    44 */       var len = array.length;
/*    45 */       var i = 0;
                  var __2 = false;
                  return (function(__break) {
                    var __loop = __nt(_, this, function() {
                      var __ = __loop;
                      if (__2) {
/*    45 */             i++;
                      }
                       else {
                        __2 = true;
                      }
                    ;
/*    45 */           if ((i < len)) {
/*    46 */             return fn(__cb(_, this, __), array[i], i);
                      }
                       else {
                        return __break();
                      }
                    ;
                    });
                    return __loop();
                  }).call(this, function() {
/*    47 */         return _(null, array);
                  });
                } catch (e) {
                  return __propagate(_, this, e);
                };
              };
/*    50 */   exports.map = function(_, array, fn) {
                var __ = (_ = __wrapIn((_ || __throw)));
                try {
/*    51 */       if (!array) {
/*    52 */         return _(null, array)
                  };
/*    53 */       var result = [];
/*    54 */       var len = array.length;
/*    55 */       var i = 0;
                  var __2 = false;
                  return (function(__break) {
                    var __loop = __nt(_, this, function() {
                      var __ = __loop;
                      if (__2) {
/*    55 */             i++;
                      }
                       else {
                        __2 = true;
                      }
                    ;
/*    55 */           if ((i < len)) {
/*    56 */             return fn(__cb(_, this, function(__0, __1) {
/*    56 */               result[i] = __1;
                          return __();
/*    56 */             }), array[i], i);
                      }
                       else {
                        return __break();
                      }
                    ;
                    });
                    return __loop();
                  }).call(this, function() {
/*    57 */         return _(null, result);
                  });
                } catch (e) {
                  return __propagate(_, this, e);
                };
              };
/*    60 */   exports.filter = function(_, array, fn) {
                var __ = (_ = __wrapIn((_ || __throw)));
                try {
/*    61 */       if (!array) {
/*    62 */         return _(null, array)
                  };
/*    63 */       var result = [];
/*    64 */       var len = array.length;
/*    65 */       var i = 0;
                  var __2 = false;
                  return (function(__break) {
                    var __loop = __nt(_, this, function() {
                      var __ = __loop;
                      if (__2) {
/*    65 */             i++;
                      }
                       else {
                        __2 = true;
                      }
                    ;
/*    65 */           if ((i < len)) {
/*    66 */             var elt = array[i];
/*    67 */             return fn(__cb(_, this, function(__0, __1) {
/*    67 */               if (__1) {
/*    68 */                 result.push(elt);
                          }
                        ;
                          return __();
/*    67 */             }), elt);
                      }
                       else {
                        return __break();
                      }
                    ;
                    });
                    return __loop();
                  }).call(this, function() {
/*    70 */         return _(null, result);
                  });
                } catch (e) {
                  return __propagate(_, this, e);
                };
              };
/*    73 */   exports.every = function(_, array, fn) {
                var __ = (_ = __wrapIn((_ || __throw)));
                try {
/*    74 */       if (!array) {
                    return _(null, null)
                  };
/*    76 */       var len = array.length;
/*    77 */       var i = 0;
                  var __2 = false;
                  return (function(__break) {
                    var __loop = __nt(_, this, function() {
                      var __ = __loop;
                      if (__2) {
/*    77 */             i++;
                      }
                       else {
                        __2 = true;
                      }
                    ;
/*    77 */           if ((i < len)) {
/*    78 */             return fn(__cb(_, this, function(__0, __1) {
/*    78 */               if (!__1) {
/*    79 */                 return _(null, false);
                          }
                        ;
                          return __();
/*    78 */             }), array[i]);
                      }
                       else {
                        return __break();
                      }
                    ;
                    });
                    return __loop();
                  }).call(this, function() {
/*    81 */         return _(null, true);
                  });
                } catch (e) {
                  return __propagate(_, this, e);
                };
              };
/*    84 */   exports.some = function(_, array, fn) {
                var __ = (_ = __wrapIn((_ || __throw)));
                try {
/*    85 */       if (!array) {
                    return _(null, null)
                  };
/*    87 */       var len = array.length;
/*    88 */       var i = 0;
                  var __2 = false;
                  return (function(__break) {
                    var __loop = __nt(_, this, function() {
                      var __ = __loop;
                      if (__2) {
/*    88 */             i++;
                      }
                       else {
                        __2 = true;
                      }
                    ;
/*    88 */           if ((i < len)) {
/*    89 */             return fn(__cb(_, this, function(__0, __1) {
/*    89 */               if (__1) {
/*    90 */                 return _(null, true);
                          }
                        ;
                          return __();
/*    89 */             }), array[i]);
                      }
                       else {
                        return __break();
                      }
                    ;
                    });
                    return __loop();
                  }).call(this, function() {
/*    92 */         return _(null, false);
                  });
                } catch (e) {
                  return __propagate(_, this, e);
                };
              };
/*    95 */   exports.eachKey = function(_, obj, fn) {
                var __ = (_ = __wrapIn((_ || __throw)));
                try {
/*    96 */       if (!obj) {
/*    97 */         return _(null, obj)
                  };
/*    98 */       var __1 = __forIn(obj);
                  var __2 = 0;
                  return (function(__break) {
                    var __loop = __nt(_, this, function() {
                      var __ = __loop;
                      if ((__2 < __1.length)) {
                        var key = __1[__2++];
/*    99 */             if (Object.prototype.hasOwnProperty.call(obj, key)) {
/*   100 */               return fn(__cb(_, this, __), key, obj[key]);
                        }
                      ;
                        return __();
                      }
                       else {
                        return __break();
                      }
                    ;
                    });
                    return __loop();
                  }).call(this, function() {
/*   102 */         return _(null, obj);
                  });
                } catch (e) {
                  return __propagate(_, this, e);
                };
              };
/*   108 */   exports.spray = function(fns, max) {
/*   109 */     return new function() {
/*   110 */       var funnel = exports.funnel(max);
/*   111 */       this.collect = function(callback, count, trim) {
/*   112 */         if ((typeof (callback) != "function")) {
/*   113 */           throw new Error("invalid call to collect: no callback")
                    };
/*   114 */         var results = (trim ? [] : new Array(fns.length));
/*   115 */         count = ((count < 0) ? fns.length : Math.min(count, fns.length));
/*   116 */         if ((count == 0)) {
/*   117 */           return callback(null, results)
                    };
/*   118 */         var collected = 0;
/*   119 */         for (var i = 0; (i < fns.length); i++) {
/*   120 */           (function(i) {
/*   121 */             funnel.channel(function(err, result) {
/*   122 */               if (err) {
/*   123 */                 return callback(err)
                          };
/*   124 */               if (trim) {
/*   125 */                 results.push(result);
                          } else {
/*   127 */                 results[i] = result;
                          };
/*   128 */               if ((++collected == count)) {
/*   129 */                 return callback(null, results)
                          };
/*   130 */             }, fns[i]);
/*   131 */           })(i);
                    };
                  };
/*   134 */       this.collectOne = function(callback) {
/*   135 */         return this.collect(function(err, result) {
/*   136 */           return callback(err, (result && result[0]));
/*   137 */         }, 1, true);
                  };
/*   139 */       this.collectAll = function(callback) {
/*   140 */         return this.collect(callback, -1, false);
                  };
                };
              };
/*   145 */   exports.funnel = function(max) {
/*   146 */     return new function() {
/*   147 */       max = ((typeof max == "undefined") ? -1 : max);
/*   148 */       var self = this;
/*   149 */       var queue = [];
/*   150 */       var active = 0;
/*   152 */       this.channel = function(callback, fn) {
/*   154 */         if ((max < 0)) {
/*   155 */           return fn(callback)
                    };
/*   157 */         queue.push({
/*   158 */           fn: fn,
/*   159 */           cb: callback
                    });
/*   162 */         function _doOne() {
/*   163 */           var current = queue.splice(0, 1)[0];
/*   164 */           if (!current.cb) {
/*   165 */             return current.fn()
                      };
/*   166 */           active++;
/*   167 */           current.fn(function(err, result) {
/*   168 */             active--;
/*   169 */             current.cb(err, result);
/*   170 */             while (((active < max) && (queue.length > 0))) {
                          _doOne();;
                        };
                      });
                    };
/*   175 */         while (((active < max) && (queue.length > 0))) {
                      _doOne();;
                    };
                  };
                };
              };
/*   182 */ })(((typeof exports !== "undefined") ? exports : (window.StreamlineFlows = (window.StreamlineFlows || {
            }))));
