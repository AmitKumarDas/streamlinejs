/*** Generated by streamline --lines-preserve 0.1.6 - DO NOT EDIT ***/
 var __global = typeof global !== 'undefined' ? global : window; function __cb(_, fn){ var ctx = __global.__context; return function(err, result){ __global.__context = ctx; if (err) return _(err); return fn(null, result); } } function __nt(_, fn){ var i = 0; var cb = __cb(_, fn); var safeCb = function(){ try { cb(); } catch (ex) { __propagate(cb, ex); } }; if (typeof process != "undefined" && typeof process.nextTick == "function") return function(){ if (++i % 20 == 0) process.nextTick(safeCb); else cb(); }; else return function(){ if (++i % 20 == 0) setTimeout(safeCb); else cb(); }; } function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } } function __trap(err){ if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } } function __forIn(object){ var array = []; for (var obj in object) { array.push(obj); } return array; } (function(exports) {



























 exports.setContext = function(ctx) {
 var old = __global.__context;
 __global.__context = ctx;
 return old; };

 exports.getContext = function() {
 return __global.__context; };





 exports.each = function(_, array, fn) { var __ = (_ = (_ || __trap));
 if ((!array || !array.length)) { return _(null) };

 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __ = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn(__cb(_, __.bind(this)), array[i], i); } else { return __break(); } ; }.bind(this)); return __loop(); }.call(this, function() {
 return _(null, array); }.bind(this)); };


 exports.map = function(_, array, fn) { var __ = (_ = (_ || __trap));
 if (!array) {
 return _(null, array) };
 var result = [];
 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __ = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn(__cb(_, function(__0, __1) { result[i] = __1; return __(); }.bind(this)), array[i], i); } else { return __break(); } ; }.bind(this)); return __loop(); }.call(this, function() {
 return _(null, result); }.bind(this)); };


 exports.filter = function(_, array, fn) { var __ = (_ = (_ || __trap));
 if (!array) {
 return _(null, array) };
 var result = [];
 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __ = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 var elt = array[i];
 return fn(__cb(_, function(__0, __1) { if (__1) {
 result.push(elt); } ; return __(); }.bind(this)), elt); } else { return __break(); } ; }.bind(this)); return __loop(); }.call(this, function() {

 return _(null, result); }.bind(this)); };


 exports.every = function(_, array, fn) { var __ = (_ = (_ || __trap));
 if (!array) { return _(null) };

 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __ = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn(__cb(_, function(__0, __1) { if (!__1) {
 return _(null, false); } ; return __(); }.bind(this)), array[i]); } else { return __break(); } ; }.bind(this)); return __loop(); }.call(this, function() {

 return _(null, true); }.bind(this)); };


 exports.some = function(_, array, fn) { var __ = (_ = (_ || __trap));
 if (!array) { return _(null) };

 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __ = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn(__cb(_, function(__0, __1) { if (__1) {
 return _(null, true); } ; return __(); }.bind(this)), array[i]); } else { return __break(); } ; }.bind(this)); return __loop(); }.call(this, function() {

 return _(null, false); }.bind(this)); };


 exports.eachKey = function(_, obj, fn) { var __ = (_ = (_ || __trap));
 if (!obj) {
 return _(null, obj) };
 var __1 = __forIn(obj); var __2 = 0; return function(__break) { var __loop = __nt(_, function() { var __ = __loop; if ((__2 < __1.length)) { var key = __1[__2++];
 if (Object.prototype.hasOwnProperty.call(obj, key)) {
 return fn(__cb(_, __.bind(this)), key, obj[key]); } ; return __(); } else { return __break(); } ; }.bind(this)); return __loop(); }.call(this, function() {

 return _(null, obj); }.bind(this)); };





 exports.spray = function(fns, max) {
 return new function() {
 var funnel = exports.funnel(max);
 this.collect = function(callback, count, trim) {
 if ((typeof (callback) != "function")) {
 throw new Error("invalid call to collect: no callback") };
 var results = (trim ? [] : new Array(fns.length));
 count = ((count < 0) ? fns.length : Math.min(count, fns.length));
 if ((count == 0)) {
 return callback(null, results) };
 var collected = 0;
 for (var i = 0; (i < fns.length); i++) {
 (function(i) {
 funnel.channel(function(err, result) {
 if (err) {
 return callback(err) };
 if (trim) {
 results.push(result); } else {

 results[i] = result; };
 if ((++collected == count)) {
 return callback(null, results) };
 }, fns[i]);
 })(i); }; };


 this.collectOne = function(callback) {
 return this.collect(function(err, result) {
 return callback(err, (result && result[0]));
 }, 1, true); };

 this.collectAll = function(callback) {
 return this.collect(callback, -1, false); }; }; };




 exports.funnel = function(max) {
 return new function() {
 max = ((typeof max == "undefined") ? -1 : max);
 var self = this;
 var queue = [];
 var active = 0;

 this.channel = function(callback, fn) {

 if ((max < 0)) {
 return fn(callback) };

 queue.push({
 fn: fn,
 cb: callback });


 function _doOne() {
 var current = queue.splice(0, 1)[0];
 if (!current.cb) {
 return current.fn() };
 active++;
 current.fn(function(err, result) {
 active--;
 current.cb(err, result);
 while (((active < max) && (queue.length > 0))) { _doOne();; }; }); };




 while (((active < max) && (queue.length > 0))) { _doOne();; }; }; }; };






})(((typeof exports !== "undefined") ? exports : (window.StreamlineFlows = (window.StreamlineFlows || {}))));