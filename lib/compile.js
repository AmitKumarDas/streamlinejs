/*** Generated by streamline 0.1.22 - DO NOT EDIT ***/

"use strict";
var __global = typeof global !== 'undefined' ? global : window;
function __cb(_, fn) { var ctx = __global.__context; return function(err, result) { __global.__context = ctx; if (err) return _(err); try { return fn(null, result); } catch (ex) { return __propagate(_, ex); } } }
function __future(fn, args, i) { var done, err, result; var cb = function(e, r) { done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function(e, r) { cb(e, r); }; fn.apply(this, args); return function(_) { if (done) _.call(this, err, result); else cb = _.bind(this); }.bind(this); }
function __propagate(_, err) { try { _(err); } catch (ex) { __trap(ex); } }
function __trap(err) { if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } }
/*     1 */ var fs = require("fs");
/*     3 */ var path = require("path");
/*     4 */ var transform = require("./transform");
/*     5 */ var flows = require("../deps/streamlib/lib/flows");
/*     7 */ function _exists(fname, callback) {
/*     8 */   path.exists(fname, function __1(result) {
/*     9 */     callback(null, result);
              });
            };
/*    13 */ function _mkdir(dir, mode, _) {
              if (!_) {
                return __future(_mkdir, arguments, 2);
              }
            ;
              var __then = _;
/*    14 */   var p = path.dirname(dir);
              return function(__then) {
/*    15 */     return _exists(p, __cb(_, function(__0, __1) {
/*    15 */       if (!__1) {
/*    16 */         return _mkdir(p, mode, __cb(_, __then));
                  }
                ;
                  return __then();
                }));
              }(function() {
/*    17 */     return fs.mkdir(dir, mode, __cb(_, __then));
              });
            };
/*    20 */ exports.compile = function __1(options, _) {
              if (!_) {
                return __future(__1, arguments, 1);
              }
            ;
              var __then = _;
/*    21 */   function _compile(_, input, output, options) {
                if (!_) {
                  return __future(_compile, arguments, 0);
                }
              ;
                var __then = _;
/*    22 */     return fs.stat(input, __cb(_, function(__0, stat) {
/*    23 */       if (stat.isDirectory()) {
/*    24 */         output = (output || input);
/*    25 */         return fs.readdir(input, __cb(_, function(__0, __4) {
/*    25 */           return flows.each(__cb(_, __then), __4, function __1(_, f) {
                        if (!_) {
                          return __future(__1, arguments, 0);
                        }
                      ;
                        var __then = _;
/*    26 */             return _compile(__cb(_, __then), path.join(input, f), path.join(output, f), options);
                      });
                    }));
                  }
                   else {
/*    28 */         if ((stat.isFile() && input.match(/_\.js$/))) {
                      return function(__then) {
                        return function(_) {
                          try {
/*    30 */                 output = (output || input);
/*    31 */                 if (!output.match(/\.js$/)) {
/*    32 */                   output = path.join(output, path.basename(input));
                            };
/*    33 */                 output = output.replace(/_\.js$/, ".js");
/*    35 */                 return fs.readFile(input, "utf8", __cb(_, function(__0, source) {
/*    36 */                   var outDir = path.dirname(output);
                              return function(__then) {
/*    37 */                     return _exists(outDir, __cb(_, function(__0, __6) {
/*    37 */                       if (!__6) {
/*    38 */                         return _mkdir(outDir, 511, __cb(_, __then));
                                  }
                                ;
                                  return __then();
                                }));
                              }(function() {
/*    39 */                     var banner = transform.banner();
                                return function(__then) {
                                  return function __1(_) {
                                    if (!_) {
                                      return __future(__1, arguments, 0);
                                    }
                                  ;
                                    var __then = _;
                                    return function __1(_) {
                                      if (!_) {
                                        return __future(__1, arguments, 0);
                                      }
                                    ;
                                      var __then = _;
                                      return function __1(_) {
                                        if (!_) {
                                          return __future(__1, arguments, 0);
                                        }
                                      ;
                                        var __then = _;
/*    40 */                             var __val = !options.force;
                                        if ((!__val == true)) {
                                          return _(null, __val);
                                        }
                                      ;
/*    40 */                             return _exists(output, _);
                                      }(__cb(_, function(__0, __val) {
                                        if ((!__val == true)) {
                                          return _(null, __val);
                                        }
                                      ;
/*    40 */                             return fs.stat(output, __cb(_, function(__0, __2) {
/*    40 */                               return _(null, (__2.mtime >= stat.mtime));
                                        }));
                                      }));
                                    }(__cb(_, function(__0, __val) {
                                      if ((!__val == true)) {
                                        return _(null, __val);
                                      }
                                    ;
/*    41 */                           return fs.readFile(output, "utf8", __cb(_, function(__0, __2) {
/*    41 */                             return _(null, (__2.substring(0, banner.length) == banner));
                                      }));
                                    }));
                                  }(__cb(_, function(__0, __2) {
/*    40 */                         if (__2) {
                                      return _(null);
                                    }
                                  ;
                                    return __then();
                                  }));
                                }(function() {
/*    44 */                       if (options.verbose) {
/*    45 */                         console.log(("compiling " + input));
                                  };
/*    46 */                       options.sourceName = input;
/*    47 */                       var transformed = transform.transform(source, options);
/*    48 */                       return fs.writeFile(output, (banner + transformed), "utf8", __cb(_, __then));
                                });
                              });
                            }));
                          } catch (e) {
                            return __propagate(_, e);
                          };
                        }(function(ex, __result) {
                          try {
                            if (ex) {
/*    50 */                   console.error(ex.message);
/*    51 */                   failed++;
                            }
                             else return _(null, __result)
                          ;
                          } catch (e) {
                            return __propagate(_, e);
                          };
                          return __then();
                        });
                      }(function() {
                        try {
                          return __then();
                        } catch (e) {
                          return __propagate(_, e);
                        };
                      });
                    }
                  ;
                    return __then();
                  }
                ;
                }));
              };
/*    57 */   var failed = 0;
/*    58 */   options = (options || {
              });
/*    59 */   if (options.verbose) {
/*    60 */     console.log(("transform version: " + transform.version));
              };
/*    61 */   if ((options.inputs.length == 0)) {
/*    62 */     return _(new Error("cannot compile: no files specified"))
              };
/*    63 */   var cwd = process.cwd;
/*    64 */   return flows.each(__cb(_, function() {
/*    67 */     if (failed) {
/*    68 */       return _(new Error((("errors found in " + failed) + " files")))
                };
                return __then();
/*    64 */   }), options.inputs, function __1(_, input) {
                if (!_) {
                  return __future(__1, arguments, 0);
                }
              ;
                var __then = _;
/*    65 */     return _compile(__cb(_, __then), path.join(cwd, input), options.output, options);
              });
            };
