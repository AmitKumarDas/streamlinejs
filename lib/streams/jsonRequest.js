/*** Generated by streamline 0.1.36-stack - DO NOT EDIT ***/ "use strict"; var __global = typeof global !== 'undefined' ? global : window;var __srcName='./lib/streams/jsonRequest_.js'; function __func(_, __this, __arguments, fn, index, frame, body) { if (!_) { return __future.call(__this, fn, __arguments, index); } frame.file = __srcName; frame.prev = __global.__frame; __global.__frame = frame; try { body(); } catch (e) { e.__frame = e.__frame || frame.prev; __propagate(_, e); } finally { __global.__frame = __frame.prev; } } function __cb(_, frame, offset, col, fn){ var ctx = __global.__context; frame.offset = offset; frame.col = col; return function ___(err, result){ var oldFrame = __global.__frame; __global.__frame = frame; __global.__context = ctx; try { if (err) { err.__frame = err.__frame || frame; return _(err); } return fn(null, result); } catch (ex) { ex.__frame = ex.__frame || frame; return __propagate(_, ex); } finally { __global.__frame = oldFrame; } } } var streams = require("./streams");












exports.send = function exports_send__1(_, url, obj) { var json, result; var __frame = { name: "exports_send__1", line: 14 }; __func(_, this, arguments, exports_send__1, 0, __frame, function() {
 json = ((obj && (typeof obj !== "string")) ? JSON.stringify(obj) : obj);




 return streams.httpRequest({ url: url, method: (json ? "POST" : "GET"), headers: { "content-type": "application/json" } }).end(json, "utf8").response(__cb(_, __frame, 6, 14, function ___(__0, __1) { return __1.readAll(__cb(_, __frame, 6, 14, function ___(__0, __2) { result = __2;
 return _(null, JSON.parse(result)); })); })); });};