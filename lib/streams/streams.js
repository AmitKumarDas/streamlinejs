<<<<<<< HEAD
/**
 * Copyright (c) 2011 Bruno Jouhier <bruno.jouhier@sage.com>
 * MIT License
 */
"use strict";

/// !nodoc -- experimental combo streams
/// 
function copy(src, dst) {
	Object.keys(src).forEach(function(key) { dst[key] = src[key]})
}
if (typeof process === "object" && typeof process.cwd === "function") {
	var req = require; // trick to skip this dependency when serving client side requires
	copy(req('./server/streams'), exports);
}
else {
	copy(require('./client/streams'), exports);
}
=======
/*** Generated by streamline 0.1.44rt2 - DO NOT EDIT ***/ "use strict"; var __rt=require('streamline-runtime')(__filename),__propagate=__rt.__propagate,__trap=__rt.__trap,__future=__rt.__future,__setEF=__rt.__setEF,__g=__rt.__g; function copy(src, dst) {









 Object.keys(src).forEach(function(key) { dst[key] = src[key]; });};

if (((typeof process === "object") && (typeof process.cwd === "function"))) {
 copy(require(("./server/" + "streams")), exports);}

 else {
 copy(require("./client/streams"), exports);};
>>>>>>> runtime
