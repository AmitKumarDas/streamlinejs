/*** Generated by streamline 0.4.5 (spoon) - DO NOT EDIT ***/var __$rt = require('streamline/lib/spoon/runtime');
(function(__$callback) {
var __$i0 = function(exports) {
    var __$i68;
    var __$i53;
    var has;
    var funnel;
    var future;
    var VERSION;
    "use strict";
    VERSION = 3;
    future = function(fn, args, i) {
        var err, result, done, q, self;
        q = [];
        self = this;
        args = Array.prototype.slice.call(args);
        args[i] = function(e, r) {
            var __$i1214;
            var __$i1204;
            err = e;
            result = r;
            done = true;
            __$i1204 = q;
            if (__$i1204) {
                __$i1214 = q.forEach(function(f) {
                    f.call(self, e, r);
                });
            } else {
                __$i1214 = __$i1204;
            };
            q = null;
        };
        fn.apply(this, args);
        return function F(cb) {
            if (!cb) {
                return F;
            } else {
                if (done) {
                    cb.call(self, err, result);
                } else {
                    q.push(cb);
                };
            };
        };
    };
    exports.funnel = function(max) {
        var __$i295;
        var fun;
        var queue, active, closed;
        if (max == null) {
            __$i295 = -1;
        } else {
            __$i295 = max;
        };
        max = __$i295;
        if (max === 0) {
            max = funnel.defaultSize;
        } else {};
        if (typeof max !== "number") {
            throw new Error("bad max number: " + max);
        } else {
            queue = [];
            active = 0;
            closed = false;
            fun = function(callback, fn) {
                var __$i1290;
                var __$i1279;
                var __$i1260;
                var __$i1251;
                if (callback == null) {
                    return future(fun, arguments, 0);
                } else {
                    __$i1251 = max < 0;
                    if (__$i1251) {
                        __$i1260 = __$i1251;
                    } else {
                        __$i1260 = max == Infinity;
                    };
                    if (__$i1260) {
                        return fn(callback);
                    } else {
                        queue.push({
                            fn: fn,
                            cb: callback
                        });
                        function _doOne() {
                            var current;
                            current = queue.splice(0, 1)[0];
                            if (!current.cb) {
                                return current.fn();
                            } else {
                                active++;
                                current.fn(function(err, result) {
                                    var __$i1593;
                                    var __$i1582;
                                    active--;
                                    if (!closed) {
                                        current.cb(err, result);
                                        while (true) {
                                            __$i1582 = active < max;
                                            if (__$i1582) {
                                                __$i1593 = queue.length > 0;
                                            } else {
                                                __$i1593 = __$i1582;
                                            };
                                            if (!__$i1593) {
                                                break;
                                            } else {
                                                _doOne();
                                            };
                                        };
                                    } else {};
                                });
                            };
                        };
                        while (true) {
                            __$i1279 = active < max;
                            if (__$i1279) {
                                __$i1290 = queue.length > 0;
                            } else {
                                __$i1290 = __$i1279;
                            };
                            if (!__$i1290) {
                                break;
                            } else {
                                _doOne();
                            };
                        };
                    };
                };
            };
            fun.close = function() {
                queue = [];
                closed = true;
            };
            return fun;
        };
    };
    funnel = exports.funnel;
    funnel.defaultSize = 4;
    function _parallel(options) {
        var __$i363;
        if (typeof options === "number") {
            return options;
        } else {
            if (typeof options.parallel === "number") {
                return options.parallel;
            } else {
                if (options.parallel) {
                    __$i363 = -1;
                } else {
                    __$i363 = 1;
                };
                return __$i363;
            };
        };
    };
    __$i53 = Array.prototype.forEach_;
    if (__$i53) {
        __$i68 = Array.prototype.forEach_.version_ >= VERSION;
    } else {
        __$i68 = __$i53;
    };
    if (__$i68) {
        return;
    } else {
        try {
            Object.defineProperty({}, "x", {});
            has = Object.prototype.hasOwnProperty;
            delete Array.prototype.forEach_;
            Object.defineProperty(Array.prototype, "forEach_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, options, fn, thisObj) {
                    var __$i412;
                    var __$i403;
                    var __$i393;
                    function __$fn386(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                has.call(this, i);
                                return __$fn385.call(this);
                            };
                        };
                        return __$fn383.call(this);
                    };
                    function __$fn385(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        i++;
                        return __$fn386.call(this);
                    };
                    function __$fn384(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$fn385.call(this);
                    };
                    function __$fn383(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$callback.call(this, null, this);
                    };
                    function __$fn382(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$fn383.call(this);
                    };
                    var i;
                    var len;
                    var par;
                    if (typeof options === "function") {
                        thisObj = fn;
                        fn = options;
                        options = 1;
                    } else {};
                    par = _parallel(options);
                    if (thisObj !== undefined) {
                        __$i393 = thisObj;
                    } else {
                        __$i393 = this;
                    };
                    thisObj = __$i393;
                    len = this.length;
                    __$i403 = par === 1;
                    if (__$i403) {
                        __$i412 = __$i403;
                    } else {
                        __$i412 = len <= 1;
                    };
                    if (__$i412) {
                        i = 0;
                        return __$fn386.call(this);
                    } else {
                        return this.map_(__$fn382, par, fn, thisObj);
                    };
                }
            });
            Array.prototype.forEach_.version_ = VERSION;
            delete Array.prototype.map_;
            Object.defineProperty(Array.prototype, "map_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, options, fn, thisObj) {
                    var __$i508;
                    var __$i499;
                    var __$i488;
                    function __$fn393(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                has.call(this, i);
                                return __$fn392.call(this);
                            };
                        };
                        return __$fn390.call(this);
                    };
                    function __$fn392(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        i++;
                        return __$fn393.call(this);
                    };
                    function __$fn391(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        __$i581[__$i582] = __$r;
                        return __$fn392.call(this);
                    };
                    function __$fn390(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$callback.call(this, null, result);
                    };
                    function __$fn389(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                has.call(this, i);
                                return __$fn388.call(this);
                            };
                        };
                        return __$fn390.call(this);
                    };
                    function __$fn388(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        i++;
                        return __$fn389.call(this);
                    };
                    function __$fn387(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        __$i533[__$i534] = __$r;
                        return __$fn388.call(this);
                    };
                    var i;
                    var fun;
                    var i;
                    var result;
                    var len;
                    var par;
                    if (typeof options === "function") {
                        thisObj = fn;
                        fn = options;
                        options = 1;
                    } else {};
                    par = _parallel(options);
                    if (thisObj !== undefined) {
                        __$i488 = thisObj;
                    } else {
                        __$i488 = this;
                    };
                    thisObj = __$i488;
                    len = this.length;
                    __$i499 = par === 1;
                    if (__$i499) {
                        __$i508 = __$i499;
                    } else {
                        __$i508 = len <= 1;
                    };
                    if (__$i508) {
                        result = new Array(len);
                        i = 0;
                        return __$fn389.call(this);
                    } else {
                        fun = funnel(par);
                        result = this.map(function(elt, i) {
                            return fun(null, function(__$callback) {
                                function __$fn435(__$e, __$r) {
                                    if (__$e) {
                                        return __$callback.call(this, __$e);
                                    };
                                    return __$callback.call(this, null, __$r);
                                };
                                return fn.call(thisObj, __$fn435, elt, i);
                            });
                        });
                        i = 0;
                        return __$fn393.call(this);
                    };
                }
            });
            delete Array.prototype.filter_;
            Object.defineProperty(Array.prototype, "filter_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, options, fn, thisObj) {
                    var __$i648;
                    var __$i639;
                    var __$i626;
                    function __$fn398(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                has.call(this, i);
                                return __$fn397.call(this);
                            };
                        };
                        return __$fn395.call(this);
                    };
                    function __$fn397(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        i++;
                        return __$fn398.call(this);
                    };
                    function __$fn396(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        if (__$r) {
                            result.push(elt);
                        } else {};
                        return __$fn397.call(this);
                    };
                    function __$fn395(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$callback.call(this, null, result);
                    };
                    function __$fn394(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$fn395.call(this);
                    };
                    var elt;
                    var i;
                    var len;
                    var result;
                    var par;
                    if (typeof options === "function") {
                        thisObj = fn;
                        fn = options;
                        options = 1;
                    } else {};
                    par = _parallel(options);
                    if (thisObj !== undefined) {
                        __$i626 = thisObj;
                    } else {
                        __$i626 = this;
                    };
                    thisObj = __$i626;
                    result = [];
                    len = this.length;
                    __$i639 = par === 1;
                    if (__$i639) {
                        __$i648 = __$i639;
                    } else {
                        __$i648 = len <= 1;
                    };
                    if (__$i648) {
                        i = 0;
                        return __$fn398.call(this);
                    } else {
                        return this.map_(__$fn394, par, function(__$callback, elt) {
                            function __$fn420(__$e, __$r) {
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                if (__$r) {
                                    result.push(elt);
                                } else {};
                                return __$callback.call(this, null);
                            };
                            return fn.call(thisObj, __$fn420, elt);
                        }, thisObj);
                    };
                }
            });
            delete Array.prototype.every_;
            Object.defineProperty(Array.prototype, "every_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, options, fn, thisObj) {
                    var __$i824;
                    var __$i835;
                    var __$i770;
                    var __$i785;
                    var __$i751;
                    var __$i742;
                    var __$i732;
                    function __$fn405(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                __$i824 = has.call(this, i);
                                if (__$i824) {
                                    return futures[i](__$fn403);
                                } else {
                                    __$i835 = __$i824;
                                    return __$fn404.call(this);
                                };
                            };
                        };
                        return __$fn402.call(this);
                    };
                    function __$fn404(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        if (__$i835) {
                            fun.close();
                            return __$callback.call(this, null, false);
                        } else {
                            i++;
                            return __$fn405.call(this);
                        };
                    };
                    function __$fn403(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        __$i835 = !__$r;
                        return __$fn404.call(this);
                    };
                    function __$fn402(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$callback.call(this, null, true);
                    };
                    function __$fn401(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                __$i770 = has.call(this, i);
                                if (__$i770) {
                                    return fn.call(thisObj, __$fn399, this[i]);
                                } else {
                                    __$i785 = __$i770;
                                    return __$fn400.call(this);
                                };
                            };
                        };
                        return __$fn402.call(this);
                    };
                    function __$fn400(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        if (__$i785) {
                            return __$callback.call(this, null, false);
                        } else {
                            i++;
                            return __$fn401.call(this);
                        };
                    };
                    function __$fn399(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        __$i785 = !__$r;
                        return __$fn400.call(this);
                    };
                    var i;
                    var futures;
                    var fun;
                    var i;
                    var len;
                    var par;
                    if (typeof options === "function") {
                        thisObj = fn;
                        fn = options;
                        options = 1;
                    } else {};
                    par = _parallel(options);
                    if (thisObj !== undefined) {
                        __$i732 = thisObj;
                    } else {
                        __$i732 = this;
                    };
                    thisObj = __$i732;
                    len = this.length;
                    __$i742 = par === 1;
                    if (__$i742) {
                        __$i751 = __$i742;
                    } else {
                        __$i751 = len <= 1;
                    };
                    if (__$i751) {
                        i = 0;
                        return __$fn401.call(this);
                    } else {
                        fun = funnel(par);
                        futures = this.map(function(elt) {
                            return fun(null, function(__$callback) {
                                function __$fn436(__$e, __$r) {
                                    if (__$e) {
                                        return __$callback.call(this, __$e);
                                    };
                                    return __$callback.call(this, null, __$r);
                                };
                                return fn.call(thisObj, __$fn436, elt);
                            });
                        });
                        i = 0;
                        return __$fn405.call(this);
                    };
                }
            });
            delete Array.prototype.some_;
            Object.defineProperty(Array.prototype, "some_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, options, fn, thisObj) {
                    var __$i971;
                    var __$i981;
                    var __$i918;
                    var __$i932;
                    var __$i899;
                    var __$i890;
                    var __$i880;
                    function __$fn412(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                __$i971 = has.call(this, i);
                                if (__$i971) {
                                    return futures[i](__$fn410);
                                } else {
                                    __$i981 = __$i971;
                                    return __$fn411.call(this);
                                };
                            };
                        };
                        return __$fn409.call(this);
                    };
                    function __$fn411(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        if (__$i981) {
                            fun.close();
                            return __$callback.call(this, null, true);
                        } else {
                            i++;
                            return __$fn412.call(this);
                        };
                    };
                    function __$fn410(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        __$i981 = __$r;
                        return __$fn411.call(this);
                    };
                    function __$fn409(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$callback.call(this, null, false);
                    };
                    function __$fn408(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                __$i918 = has.call(this, i);
                                if (__$i918) {
                                    return fn.call(thisObj, __$fn406, this[i]);
                                } else {
                                    __$i932 = __$i918;
                                    return __$fn407.call(this);
                                };
                            };
                        };
                        return __$fn409.call(this);
                    };
                    function __$fn407(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        if (__$i932) {
                            return __$callback.call(this, null, true);
                        } else {
                            i++;
                            return __$fn408.call(this);
                        };
                    };
                    function __$fn406(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        __$i932 = __$r;
                        return __$fn407.call(this);
                    };
                    var i;
                    var futures;
                    var fun;
                    var i;
                    var len;
                    var par;
                    if (typeof options === "function") {
                        thisObj = fn;
                        fn = options;
                        options = 1;
                    } else {};
                    par = _parallel(options);
                    if (thisObj !== undefined) {
                        __$i880 = thisObj;
                    } else {
                        __$i880 = this;
                    };
                    thisObj = __$i880;
                    len = this.length;
                    __$i890 = par === 1;
                    if (__$i890) {
                        __$i899 = __$i890;
                    } else {
                        __$i899 = len <= 1;
                    };
                    if (__$i899) {
                        i = 0;
                        return __$fn408.call(this);
                    } else {
                        fun = funnel(par);
                        futures = this.map(function(elt) {
                            return fun(null, function(__$callback) {
                                function __$fn437(__$e, __$r) {
                                    if (__$e) {
                                        return __$callback.call(this, __$e);
                                    };
                                    return __$callback.call(this, null, __$r);
                                };
                                return fn.call(thisObj, __$fn437, elt);
                            });
                        });
                        i = 0;
                        return __$fn412.call(this);
                    };
                }
            });
            delete Array.prototype.reduce_;
            Object.defineProperty(Array.prototype, "reduce_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, fn, v, thisObj) {
                    var __$i1009;
                    function __$fn415(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i < len)) {
                                break;
                            } else {
                                has.call(this, i);
                                return __$fn414.call(this);
                            };
                        };
                        return __$callback.call(this, null, v);
                    };
                    function __$fn414(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        i++;
                        return __$fn415.call(this);
                    };
                    function __$fn413(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        v = __$r;
                        return __$fn414.call(this);
                    };
                    var i;
                    var len;
                    if (thisObj !== undefined) {
                        __$i1009 = thisObj;
                    } else {
                        __$i1009 = this;
                    };
                    thisObj = __$i1009;
                    len = this.length;
                    i = 0;
                    return __$fn415.call(this);
                }
            });
            delete Array.prototype.reduceRight_;
            Object.defineProperty(Array.prototype, "reduceRight_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, fn, v, thisObj) {
                    var __$i1066;
                    function __$fn418(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        while (true) {
                            if (!(i >= 0)) {
                                break;
                            } else {
                                has.call(this, i);
                                return __$fn417.call(this);
                            };
                        };
                        return __$callback.call(this, null, v);
                    };
                    function __$fn417(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        i--;
                        return __$fn418.call(this);
                    };
                    function __$fn416(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        v = __$r;
                        return __$fn417.call(this);
                    };
                    var i;
                    var len;
                    if (thisObj !== undefined) {
                        __$i1066 = thisObj;
                    } else {
                        __$i1066 = this;
                    };
                    thisObj = __$i1066;
                    len = this.length;
                    i = len - 1;
                    return __$fn418.call(this);
                }
            });
            delete Array.prototype.sort_;
            Object.defineProperty(Array.prototype, "sort_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(__$callback, compare, beg, end) {
                    var __$i1142;
                    var __$i1125;
                    var __$i1118;
                    function __$fn419(__$e, __$r) {
                        if (__$e) {
                            return __$callback.call(this, __$e);
                        };
                        return __$callback.call(this, null, array);
                    };
                    var array;
                    array = this;
                    __$i1118 = beg;
                    if (__$i1118) {
                        __$i1125 = __$i1118;
                    } else {
                        __$i1125 = 0;
                    };
                    beg = __$i1125;
                    if (end == null) {
                        __$i1142 = array.length - 1;
                    } else {
                        __$i1142 = end;
                    };
                    end = __$i1142;
                    function _qsort(__$callback, beg, end) {
                        var __$i1440;
                        var __$i1455;
                        var __$i1409;
                        var __$i1424;
                        function __$fn426(__$e, __$r) {
                            function __$fn430(__$e, __$r) {
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                if (nbeg <= nend) {
                                    tmp = array[nbeg];
                                    array[nbeg] = array[nend];
                                    array[nend] = tmp;
                                    nbeg++;
                                    nend--;
                                } else {};
                                return __$fn425.call(this);
                            };
                            function __$fn429(__$e, __$r) {
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                while (true) {
                                    __$i1440 = beg < nend;
                                    if (__$i1440) {
                                        return compare(__$fn427, o, array[nend]);
                                    } else {
                                        __$i1455 = __$i1440;
                                        return __$fn428.call(this);
                                    };
                                };
                                return __$fn430.call(this);
                            };
                            function __$fn428(__$e, __$r) {
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                if (!__$i1455) {
                                    return __$fn430.call(this);
                                } else {
                                    nend--;
                                    return __$fn429.call(this);
                                };
                            };
                            function __$fn427(__$e, __$r) {
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                __$i1455 = __$r < 0;
                                return __$fn428.call(this);
                            };
                            if (__$e) {
                                return __$callback.call(this, __$e);
                            };
                            return __$fn429.call(this);
                        };
                        function __$fn425(__$e, __$r) {
                            function __$fn432(__$e, __$r) {
                                function __$fn434(__$e, __$r) {
                                    if (__$e) {
                                        return __$callback.call(this, __$e);
                                    };
                                    return __$callback.call(this, null);
                                };
                                function __$fn433(__$e, __$r) {
                                    if (__$e) {
                                        return __$callback.call(this, __$e);
                                    };
                                    return __$fn434.call(this);
                                };
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                beg < nend;
                                return __$fn434.call(this);
                            };
                            function __$fn431(__$e, __$r) {
                                if (__$e) {
                                    return __$callback.call(this, __$e);
                                };
                                return __$fn432.call(this);
                            };
                            if (__$e) {
                                return __$callback.call(this, __$e);
                            };
                            while (true) {
                                if (!(nbeg <= nend)) {
                                    break;
                                } else {
                                    return __$fn424.call(this);
                                };
                            };
                            nbeg < end;
                            return __$fn432.call(this);
                        };
                        function __$fn424(__$e, __$r) {
                            if (__$e) {
                                return __$callback.call(this, __$e);
                            };
                            while (true) {
                                __$i1409 = nbeg < end;
                                if (__$i1409) {
                                    return compare(__$fn422, array[nbeg], o);
                                } else {
                                    __$i1424 = __$i1409;
                                    return __$fn423.call(this);
                                };
                            };
                            return __$fn426.call(this);
                        };
                        function __$fn423(__$e, __$r) {
                            if (__$e) {
                                return __$callback.call(this, __$e);
                            };
                            if (!__$i1424) {
                                return __$fn426.call(this);
                            } else {
                                nbeg++;
                                return __$fn424.call(this);
                            };
                        };
                        function __$fn422(__$e, __$r) {
                            if (__$e) {
                                return __$callback.call(this, __$e);
                            };
                            __$i1424 = __$r < 0;
                            return __$fn423.call(this);
                        };
                        function __$fn421(__$e, __$r) {
                            if (__$e) {
                                return __$callback.call(this, __$e);
                            };
                            if (__$r > 0) {
                                tmp = array[beg];
                                array[beg] = array[end];
                                array[end] = tmp;
                            } else {};
                            return __$callback.call(this, null);
                        };
                        var tmp;
                        var nend;
                        var nbeg;
                        var o;
                        var mid;
                        var tmp;
                        if (beg >= end) {
                            return __$callback.call(this, null);
                        } else {
                            if (end == beg + 1) {
                                return compare(__$fn421, array[beg], array[end]);
                            } else {
                                mid = Math.floor((beg + end) / 2);
                                o = array[mid];
                                nbeg = beg;
                                nend = end;
                                return __$fn425.call(this);
                            };
                        };
                    };
                    return _qsort(__$fn419, beg, end);
                }
            });
            delete Function.prototype.apply_;
            Object.defineProperty(Function.prototype, "apply_", {
                configurable: true,
                writable: true,
                enumerable: false,
                value: function(callback, thisObj, args, index) {
                    var __$i1187;
                    var __$i1176;
                    var __$i1163;
                    var __$i1164;
                    var __$i1167;
                    args = Array.prototype.slice.call(args, 0);
                    __$i1163 = args;
                    __$i1164 = "splice";
                    __$i1167 = index != null;
                    if (__$i1167) {
                        __$i1176 = index >= 0;
                    } else {
                        __$i1176 = __$i1167;
                    };
                    if (__$i1176) {
                        __$i1187 = index;
                    } else {
                        __$i1187 = args.length;
                    };
                    __$i1163[__$i1164](__$i1187, 0, callback);
                    return this.apply(thisObj, args);
                }
            });
        } catch (e) {
            return;
        };
    };
};

if (typeof exports !== "undefined") {
    __$i25 = exports;
} else {
    var __$i9 = Streamline;
    var __$i10 = "builtins";
    var __$i13 = Streamline.builtins;
    if (__$i13) {
        __$i20 = __$i13;
    } else {
        __$i20 = {};
    };
    var __$i20;
    __$i25 = __$i9[__$i10] = __$i20;
};

var __$i25;

__$i0(__$i25);

return __$callback.call(this, null);
})(function(__$e) { if (__$e) console.log(__$e); });
