#!/usr/bin/env node

console.log("obsolete script: use _coffee instead.");
var coffee = require('coffee-script');
var path = require('path');
var fs = require('fs');

var streamline = require('streamline');

if (process.argv.length >= 3 && process.argv[2][0] != '-') {
	// coffee-streamline myScript.coffee args
	// our compile hook is not called if we pass it to coffee-script command line
	process.argv.shift(); // remove the 'node' arg inserted by the shell
	var arg = process.argv[1];
	var p = path.join(process.cwd(), arg);
	if (!arg.match(/\.(js|coffee)$/) && path.existsSync(p)) {
		var source = fs.readFileSync(p, "utf8");
		// if first line is shebang and source does not contain streamline marker, replace first line by marker
		if (source[0] === '#' && source[1] === '!' && source.indexOf('streamline/module') < 0) {
			source = "return if not require('streamline/module')(module)" + source.substring(source.indexOf('\n'));
		}
		var tmp = path.join(process.cwd(), "tmp--" + Math.round(Math.random() * 1e9) + ".coffee");
		fs.writeFileSync(tmp, source, "utf8");
		process.on('exit', function() {
			try {
				fs.unlinkSync(tmp);
			} catch (ex) {}
		});
		require(tmp);
	} else {
		require(p);
	}
} else {
	// coffee-script command line with handle REPL and compiler
	global.error = console.log
	require('coffee-script/lib/command').run();
}