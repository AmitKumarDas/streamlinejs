/*** Generated by streamline 0.1.36-stack - DO NOT EDIT ***/ var __global = typeof global !== 'undefined' ? global : window;var __fastCb=false; function __cb(_, fn){ var ctx = __global.__context; var frame = new Error(); frame.__prev = __global.__frame; return function ___(err, result){ __global.__frame = frame; __global.__context = ctx; if (err) { err.__prev = err.__prev || frame; return _(err); } frame.__valid = true; if (__fastCb) return fn(null, result); try { return fn(null, result); } catch (ex) { return __propagate(_, ex); } } } function __future(fn, args, i){ var done, err, result; var cb = function(e, r){ done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function ___(e, r){ cb(e, r); }; fn.apply(this, args); return function ___(_){ if (done) _.call(this, err, result); else cb = _.bind(this); } .bind(this); } function __nt(_, fn){ var i = 0; var cb = __cb(_, fn); var safeCb = function ___(){ try { cb(); } catch (ex) { __propagate(cb, ex); } }; if (typeof process != "undefined" && typeof process.nextTick == "function") return function ___(){ if (++i % 20 == 0) process.nextTick(safeCb); else cb(); }; else return function ___(){ if (++i % 20 == 0) setTimeout(safeCb); else cb(); }; } function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } } function __trap(err){ if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } } function __tryCatch(_, fn){ try { fn(); } catch (e) { try { _(e); } catch (ex) { __trap(ex); } } } var module = QUnit.module;




var flows = require("streamline/lib/util/flows");

function nextTick(cb) {
 setTimeout(function() {
 cb();
 }, 0);};


function failAsync(_, code) { if (!_) { return __future(failAsync, arguments, 0); };
 return _(new Error(code));};


function failSync(_, code) { if (!_) { return __future(failSync, arguments, 0); };
 (function fail() {
 throw new Error(code);
 })(); _();};


var fail;

function A(_, code) { if (!_) { return __future(A, arguments, 0); }; var i; return (function __$A(__then) {
 if ((code == 1)) {
 return fail(__cb(_, function __$A() { __then(); }), code); } else { __then(); } ; })(function __$A() { return (function __$A(__then) {
 if ((code == 2)) {
 return fail(__cb(_, function __$A() { __then(); }), code); } else { __then(); } ; })(function __$A() {
 return nextTick(__cb(_, function __$A() { return (function __$A(__then) {
 if ((code == 3)) {
 return fail(__cb(_, function __$A() { __then(); }), code); } else { __then(); } ; })(function __$A() {
 i = 0; var __6 = false; return (function ___(__break) { var __loop = __nt(_, function __$A() { if (__6) { i++; } else { __6 = true; } ; var __5 = (i < 6); if (__5) { return (function __$A(__then) {
 if ((code == i)) {
 return fail(__cb(_, function __$A() { __then(); }), code); } else { __then(); } ; })(function __$A() {
 return nextTick(__cb(_, function __$A() { __loop(); })); }); } else { __break(); } ; }); __loop(); })(function __$A() { return (function __$A(__then) {

 if ((code == 6)) {
 return fail(__cb(_, function __$A() { __then(); }), code); } else { __then(); } ; })(function __$A() {
 return nextTick(__cb(_, function __$A() {
 return B(__cb(_, function __$A() {
 return nextTick(__cb(_, function __$A() {
 return _(null, "END"); })); }), code); })); }); }); }); })); }); });};


function B(_, code) { if (!_) { return __future(B, arguments, 0); }; return (function __$B(__then) {
 if ((code == 7)) {
 return fail(__cb(_, function __$B() { __then(); }), code); } else { __then(); } ; })(function __$B() {
 return C(__cb(_, function __$B() {
 return nextTick(__cb(_, function __$B() {
 return C(__cb(_, function __$B() {
 return D(__cb(_, function __$B() { _(); }), code); }), code); })); }), code); });};


function C(_, code) { if (!_) { return __future(C, arguments, 0); }; return (function __$C(__then) {
 if ((code == 8)) {
 return fail(__cb(_, function __$C() { __then(); }), code); } else { __then(); } ; })(function __$C() { _(); });};


function D(_, code) { if (!_) { return __future(D, arguments, 0); }; return (function __$D(__then) {
 if ((code == 9)) {
 return fail(__cb(_, function __$D() { __then(); }), code); } else { __then(); } ; })(function __$D() { _(); });};


function T(_, code, failFn) { if (!_) { return __future(T, arguments, 0); }; var s;
 fail = failFn;
 s = "{"; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$T() {

 return A(__cb(_, _), code); }); })(function ___(ex, __result) { __tryCatch(_, function __$T() { if (ex) {


 s = flows.stackTrace(ex);
 console.log(("STACK: " + s));
 s = s.split("\n").map(function(l) {
 var m = /^\s+at (\w+)\s\(.*:(\d+)\:.*\)/.exec(l);
 return (m ? ((m[1] + ":") + m[2]) : l);
 }).join("/");
 return _(null, s.substring(0, s.indexOf("/T:"))); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$T() { _(); }); });};



module("flows");

asyncTest("stacks", 20, function __1(_) { if (!_) { return __future(__1, arguments, 0); };





 return T(__cb(_, function ___(__0, __1) { strictEqual(__1, "Error: 3/fail:20/failSync:21/A:33");














 start(); _(); }), 3, failSync);});