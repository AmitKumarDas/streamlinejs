/*** Generated by streamline 0.1.16 - DO NOT EDIT ***/ var __global = typeof global !== 'undefined' ? global : window; function __cb(_, fn) { var ctx = __global.__context; return function(err, result) { __global.__context = ctx; if (err) return _(err); return fn(null, result); } } function __future(fn, args, i) { var done, err, result; var cb = function(e, r) { done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function(e, r) { cb(e, r); }; fn.apply(this, args); return function(_) { if (done) _.call(this, err, result); else cb = _.bind(this); }.bind(this); } function __nt(_, fn) { var i = 0; var cb = __cb(_, fn); var safeCb = function() { try { cb(); } catch (ex) { __propagate(cb, ex); } }; if (typeof process != "undefined" && typeof process.nextTick == "function") return function() { if (++i % 20 == 0) process.nextTick(safeCb); else cb(); }; else return function() { if (++i % 20 == 0) setTimeout(safeCb); else cb(); }; } function __propagate(_, err) { try { _(err); } catch (ex) { __trap(ex); } } function __trap(err) { if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } } function __forIn(object) { var array = []; for (var obj in object) { array.push(obj); } return array; } (function __1(exports) {


























 "use strict";



 exports.setContext = function __1(ctx) {
 var old = __global.__context;
 __global.__context = ctx;
 return old; };

 exports.getContext = function __2() {
 return __global.__context; };




 exports.each = function __3(_, array, fn, thisObj) { if (!_) { return __future(__3, arguments, 0); } ; var __then = _;
 if ((!array || !array.length)) { return _(null) };

 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn.call(thisObj, __cb(_, __then), array[i], i); } else { return __break(); } ; }); return __loop(); }(function() {
 return _(null, array); }); };

 exports.map = function __4(_, array, fn, thisObj) { if (!_) { return __future(__4, arguments, 0); } ; var __then = _;
 if (!array) {
 return _(null, array) };
 var result = [];
 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn.call(thisObj, __cb(_, function(__0, __1) { result[i] = __1; return __then(); }), array[i], i); } else { return __break(); } ; }); return __loop(); }(function() {
 return _(null, result); }); };

 exports.filter = function __5(_, array, fn, thisObj) { if (!_) { return __future(__5, arguments, 0); } ; var __then = _;
 if (!array) {
 return _(null, array) };
 var result = [];
 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 var elt = array[i];
 return fn.call(thisObj, __cb(_, function(__0, __1) { if (__1) {
 result.push(elt); } ; return __then(); }), elt); } else { return __break(); } ; }); return __loop(); }(function() {

 return _(null, result); }); };

 exports.every = function __6(_, array, fn, thisObj) { if (!_) { return __future(__6, arguments, 0); } ; var __then = _;
 if (!array) { return _(null) };

 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn.call(thisObj, __cb(_, function(__0, __1) { if (!__1) {
 return _(null, false); } ; return __then(); }), array[i]); } else { return __break(); } ; }); return __loop(); }(function() {

 return _(null, true); }); };

 exports.some = function __7(_, array, fn, thisObj) { if (!_) { return __future(__7, arguments, 0); } ; var __then = _;
 if (!array) { return _(null) };

 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn.call(thisObj, __cb(_, function(__0, __1) { if (__1) {
 return _(null, true); } ; return __then(); }), array[i]); } else { return __break(); } ; }); return __loop(); }(function() {

 return _(null, false); }); };

 exports.reduce = function __8(_, array, fn, v, thisObj) { if (!_) { return __future(__8, arguments, 0); } ; var __then = _;
 if (!array) {
 return _(null, v) };
 var len = array.length;
 var i = 0; var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i++; } else { __2 = true; } ; if ((i < len)) {
 return fn.call(thisObj, __cb(_, function(__0, __1) { v = __1; return __then(); }), v, array[i], i, array); } else { return __break(); } ; }); return __loop(); }(function() {

 return _(null, v); }); };

 exports.reduceRight = function __9(_, array, fn, v, thisObj) { if (!_) { return __future(__9, arguments, 0); } ; var __then = _;
 if (!array) {
 return _(null, v) };
 var len = array.length;
 var i = (len - 1); var __2 = false; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if (__2) { i--; } else { __2 = true; } ; if ((i >= 0)) {
 return fn.call(thisObj, __cb(_, function(__0, __1) { v = __1; return __then(); }), v, array[i], i, array); } else { return __break(); } ; }); return __loop(); }(function() {

 return _(null, v); }); };

 exports.eachKey = function __10(_, obj, fn, thisObj) { if (!_) { return __future(__10, arguments, 0); } ; var __then = _;
 if (!obj) {
 return _(null, obj) };
 var __1 = __forIn(obj); var __2 = 0; return function(__break) { var __loop = __nt(_, function() { var __then = __loop; if ((__2 < __1.length)) { var key = __1[__2++];
 if (Object.prototype.hasOwnProperty.call(obj, key)) {
 return fn.call(thisObj, __cb(_, __then), key, obj[key]); } ; return __then(); } else { return __break(); } ; }); return __loop(); }(function() {

 return _(null, obj); }); };




 exports.spray = function __11(fns, max) {
 return new function __1() {

 var funnel = exports.funnel(max);
 this.collect = function __1(callback, count, trim) {
 if ((typeof (callback) != "function")) {
 throw new Error("invalid call to collect: no callback") };
 var results = (trim ? [] : new Array(fns.length));
 count = ((count < 0) ? fns.length : Math.min(count, fns.length));
 if ((count == 0)) {
 return callback(null, results) };
 var collected = 0;
 for (var i = 0; (i < fns.length); i++) {
 (function __1(i) {
 funnel(function __1(err, result) {
 if (err) {
 return callback(err) };
 if (trim) {
 results.push(result); } else {

 results[i] = result; };
 if ((++collected == count)) {
 return callback(null, results) };
 }, fns[i]);
 })(i); }; };


 this.collectOne = function __2(callback) {
 return this.collect(function __1(err, result) {
 return callback(err, (result && result[0]));
 }, 1, true); };

 this.collectAll = function __3(callback) {
 return this.collect(callback, -1, false); }; }; };




 exports.funnel = function __12(max) {
 max = ((typeof max == "undefined") ? -1 : max);
 var queue = [];
 var active = 0;

 return function __1(callback, fn) {

 if ((max < 0)) {
 return fn(callback) };

 queue.push({
 fn: fn,
 cb: callback });


 function _doOne() {
 var current = queue.splice(0, 1)[0];
 if (!current.cb) {
 return current.fn() };
 active++;
 current.fn(function __1(err, result) {
 active--;
 current.cb(err, result);
 while (((active < max) && (queue.length > 0))) { _doOne();; }; }); };




 while (((active < max) && (queue.length > 0))) { _doOne();; }; }; };



 exports.collect = function __13(_, futures) { if (!_) { return __future(__13, arguments, 0); } ; var __then = _;
 return exports.map(_, futures, function __1(_, future) { if (!_) { return __future(__1, arguments, 0); } ; var __then = _;
 return future(_); }); };


})(((typeof exports !== "undefined") ? exports : (window.StreamlineFlows = (window.StreamlineFlows || {}))));