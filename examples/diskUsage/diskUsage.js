/*** Generated by streamline 0.1.36-stack - DO NOT EDIT ***/
var __global = typeof global !== 'undefined' ? global : window;var __srcName='./examples/diskUsage/diskUsage_.js';
function __func(_, __this, __arguments, fn, index, frame, body) { if (!_) { return __future.call(__this, fn, __arguments, index); } frame.file = __srcName; frame.prev = __global.__frame; __global.__frame = frame; try { body(); } catch (e) { e.__frame = e.__frame || frame.prev; __propagate(_, e); } finally { __global.__frame = __frame.prev; } }
function __cb(_, frame, offset, col, fn){ var ctx = __global.__context; frame.offset = offset; frame.col = col; return function ___(err, result){ var oldFrame = __global.__frame; __global.__frame = frame; __global.__context = ctx; try { if (err) { err.__frame = err.__frame || frame; return _(err); } return fn(null, result); } catch (ex) { ex.__frame = ex.__frame || frame; return __propagate(_, ex); } finally { __global.__frame = oldFrame; } } }
function __nt(_, frame, fn){ var i = 0; var cb = __cb(_, frame, 0, 0, fn); var safeCb = function ___(){ try { cb(); } catch (ex) { __propagate(cb, ex); } }; if (typeof process != "undefined" && typeof process.nextTick == "function") return function ___(){ if (++i % 20 == 0) process.nextTick(safeCb); else cb(); }; else return function ___(){ if (++i % 20 == 0) setTimeout(safeCb); else cb(); }; }
function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } }
function __trap(err){ if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } }
            (function __$main(_) {
              var fs, p, t0;
/*    13 */   function du(_, path) {
                var total, stat, files, i;
                var __frame = {
                  name: "du",
                  line: 13
                };
                __func(_, this, arguments, du, 0, __frame, function() {
/*    14 */       total = 0;
/*    15 */       return fs.stat(path, __cb(_, __frame, 2, 12, function ___(__0, __1) {
                    stat = __1;
                    return (function __$du(__then) {
/*    16 */           if (stat.isFile()) {
/*    17 */             return fs.readFile(path, __cb(_, __frame, 4, 11, function ___(__0, __2) {
/*    17 */               total += __2.length;
                          __then();
                        }));
                      }
                       else {
                        return (function __$du(__then) {
/*    19 */               if (stat.isDirectory()) {
/*    20 */                 return fs.readdir(path, __cb(_, __frame, 7, 14, function ___(__0, __3) {
                              files = __3;
/*    21 */                   i = 0;
                              var __9 = false;
                              return (function ___(__break) {
                                var __loop = __nt(_, __frame, function __$du() {
                                  if (__9) {
/*    21 */                         i++;
                                  }
                                   else {
                                    __9 = true;
                                  }
                                ;
/*    21 */                       var __8 = (i < files.length);
                                  if (__8) {
/*    22 */                         return du(__cb(_, __frame, 9, 12, function ___(__0, __4) {
/*    22 */                           total += __4;
                                      __loop();
/*    22 */                         }), ((path + "/") + files[i]));
                                  }
                                   else {
                                    __break();
                                  }
                                ;
                                });
                                __loop();
                              })(function __$du() {
/*    24 */                     console.log(((path + ": ") + total));
                                __then();
                              });
                            }));
                          }
                           else {
/*    27 */                 console.log((path + ": odd file"));
                            __then();
                          }
                        ;
                        })(__then);
                      }
                    ;
                    })(function __$du() {
/*    29 */           return _(null, total);
                    });
                  }));
                });
              };
/*    11 */   fs = require("fs");
/*    32 */   p = ((process.argv.length > 2) ? process.argv[2] : ".");
/*    34 */   t0 = Date.now();
/*    35 */   return du(__cb(_, __frame, 33, 0, function __$__$main() {
/*    36 */     console.log((("completed in " + ((Date.now() - t0))) + " ms"));
                _();
/*    35 */   }), p);
            }).call(this, __trap);
