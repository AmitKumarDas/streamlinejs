/*** Generated by streamline 0.1.36-stack - DO NOT EDIT ***/
var __global = typeof global !== 'undefined' ? global : window;var __srcName='streamline/examples/diskUsage/diskUsage2_.js';
function __func(_, __this, __arguments, fn, index, frame, body) { if (!_) { return __future.call(__this, fn, __arguments, index); } frame.file = __srcName; frame.prev = __global.__frame; __global.__frame = frame; try { body(); } catch (e) { e.__frame = e.__frame || frame.prev; __propagate(_, e); } finally { __global.__frame = __frame.prev; } }
function __cb(_, frame, offset, col, fn){ frame.offset = offset; frame.col = col; var ctx = __global.__context; return function ___(err, result){ var oldFrame = __global.__frame; __global.__frame = frame; __global.__context = ctx; try { if (err) { err.__frame = err.__frame || frame; return _(err); } return fn(null, result); } catch (ex) { ex.__frame = ex.__frame || frame; return __propagate(_, ex); } finally { __global.__frame = oldFrame; } } }
function __future(fn, args, i){ var done, err, result; var cb = function(e, r){ done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function ___(e, r){ cb(e, r); }; fn.apply(this, args); return function ___(_){ if (done) _.call(this, err, result); else cb = _.bind(this); } .bind(this); }
function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } }
function __trap(err){ if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } }
            (function main(_) {
              var fs, flows, fileFunnel, p, t0;
/*    27 */   function du(_, path) {
                var total, stat, files, futures;
                var __frame = {
                  name: "du",
                  line: 27
                };
                return __func(_, this, arguments, du, 0, __frame, function __$du() {
/*    28 */       total = 0;
/*    29 */       return fs.stat(path, __cb(_, __frame, 2, 12, function ___(__0, __3) {
                    stat = __3;
                    return (function __$du(__then) {
/*    30 */           if (stat.isFile()) {
/*    31 */             return fileFunnel(__cb(_, __frame, 4, 2, __then), function __1(_) {
                          var __frame = {
                            name: "__1",
                            line: 31
                          };
                          return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
/*    32 */                 return fs.readFile(path, __cb(_, __frame, 1, 12, function ___(__0, __1) {
/*    32 */                   total += __1.length;
                              _();
                            }));
                          });
                        });
                      }
                       else {
                        return (function __$du(__then) {
/*    36 */               if (stat.isDirectory()) {
/*    37 */                 return fs.readdir(path, __cb(_, __frame, 10, 15, function ___(__0, __4) {
                              files = __4;
/*    38 */                   futures = files.map(function(file) {
/*    39 */                     return du(null, ((path + "/") + file));
                              });
/*    41 */                   return flows.reduce(__cb(_, __frame, 14, 12, function ___(__0, __5) {
/*    41 */                     total += __5;
/*    44 */                     console.log(((path + ": ") + total));
                                __then();
/*    41 */                   }), futures, function __2(_, val, future) {
                                var __frame = {
                                  name: "__2",
                                  line: 41
                                };
                                return __func(_, this, arguments, __2, 0, __frame, function __$__2() {
/*    42 */                       return future(__cb(_, __frame, 1, 17, function ___(__0, __2) {
/*    42 */                         var __1 = (val + __2);
                                    return _(null, __1);
                                  }));
                                });
/*    43 */                   }, 0);
                            }));
                          }
                           else {
/*    47 */                 console.log((path + ": odd file"));
                            __then();
                          }
                        ;
                        })(__then);
                      }
                    ;
                    })(function __$du() {
/*    49 */           return _(null, total);
                    });
                  }));
                });
              };
              var __frame = {
                name: "main",
                line: 1
              };
              return __func(_, this, arguments, main, 0, __frame, function __$main() {
/*    22 */     fs = require("fs");
/*    23 */     flows = require("streamline/lib/util/flows");
/*    25 */     fileFunnel = flows.funnel(20);
/*    52 */     p = ((process.argv.length > 2) ? process.argv[2] : ".");
/*    54 */     t0 = Date.now();
/*    55 */     return du(__cb(_, __frame, 54, 0, function __$main() {
/*    56 */       console.log((("completed in " + ((Date.now() - t0))) + " ms"));
                  _();
/*    55 */     }), p);
              });
            }).call(this, __trap);
